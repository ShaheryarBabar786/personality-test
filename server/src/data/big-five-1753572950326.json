{
  "id": "big-five-1753572950326",
  "name": "Big Five Personality Test",
  "type": "big-five",
  "scoringType": "sum",
  "description": "New big 5 test",
  "questions": [
    {
      "id": "q1753572770082",
      "text": "Question 1",
      "target": "openness",
      "isReversed": false,
      "weight": 1,
      "translations": {
        "french": "French Translation",
        "spanish": "Spanish Translation"
      }
    },
    {
      "id": "q1753572995393",
      "text": "Question 2",
      "target": "conscientiousness",
      "isReversed": true,
      "weight": 1,
      "translations": {
        "french": "French Translation",
        "spanish": "Spanish Translation"
      }
    }
  ],
  "outcomes": [
    {
      "id": "openness",
      "name": "Openness",
      "description": "Openness to experience",
      "translations": {
        "English": "Openness",
        "French": "",
        "Spanish": ""
      }
    },
    {
      "id": "conscientiousness",
      "name": "Conscientiousness",
      "description": "Self-discipline and organization",
      "translations": {
        "English": "Conscientiousness",
        "French": "",
        "Spanish": ""
      }
    },
    {
      "id": "extraversion",
      "name": "Extraversion",
      "description": "Sociability and talkativeness",
      "translations": {
        "English": "Extraversion",
        "French": "",
        "Spanish": ""
      }
    },
    {
      "id": "agreeableness",
      "name": "Agreeableness",
      "description": "Compassion and cooperativeness",
      "translations": {
        "English": "Agreeableness",
        "French": "",
        "Spanish": ""
      }
    },
    {
      "id": "neuroticism",
      "name": "Neuroticism",
      "description": "Emotional instability",
      "translations": {
        "English": "Neuroticism",
        "French": "",
        "Spanish": ""
      }
    }
  ],
  "customScoring": "function(outcomes, testConfig) {\n  // Big Five Scoring Logic\n  const questionsByOutcome = {};\n  outcomes.forEach(o => {\n    questionsByOutcome[o.id] = testConfig.questions.filter(q => q.target === o.id);\n  });\n\n  const outcomesWithPercentages = outcomes.map(o => {\n    const questions = questionsByOutcome[o.id] || [];\n    const maxPossible = questions.length * 5;\n    const percentage = maxPossible > 0 ? Math.round((o.score / maxPossible) * 100) : 0;\n\n    return {\n      ...o,\n      percentage,\n      maxPossible\n    };\n  });\n\n  return {\n    outcomes: outcomesWithPercentages,\n    result: outcomesWithPercentages.map(o => `${o.name}: ${o.percentage}%`).join(', '),\n    detailedResult: outcomesWithPercentages\n  };\n}"
}